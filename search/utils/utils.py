# coding=utf-8

import random

from requests.adapters import HTTPAdapter
from requests.packages.urllib3.util.ssl_ import create_urllib3_context

ciphers_ls = [
    'ECDHE-ECDSA-AES256-GCM-SHA384:NULL-SHA256:ECDH-ECDSA-AES128-SHA256:DHE-DSS-AES256-SHA256:ECDH-RSA-AES256-SHA384:ECDH-ECDSA-AES256-SHA384:ECDH-RSA-AES256-GCM-SHA384:DHE-DSS-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-SHA256:DHE-DSS-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ADH-AES256-GCM-SHA384:AES256-SHA256:ECDH-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-SHA256',
    'ECDHE-ECDSA-AES128-SHA256:AES256-GCM-SHA384:ADH-AES256-SHA256:DHE-DSS-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:DHE-DSS-AES256-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDH-RSA-AES128-GCM-SHA256:AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDH-ECDSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:ECDH-ECDSA-AES256-GCM-SHA384:ECDH-RSA-AES256-SHA384:DHE-DSS-AES128-SHA256:ECDH-RSA-AES256-GCM-SHA384',
    'AES256-SHA256:ECDH-ECDSA-AES256-GCM-SHA384:DHE-DSS-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:DHE-DSS-AES128-GCM-SHA256:DHE-RSA-AES256-SHA256:NULL-SHA256:ECDH-ECDSA-AES128-GCM-SHA256:DHE-DSS-AES128-SHA256:AES128-SHA256:AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ADH-AES256-GCM-SHA384:ECDH-ECDSA-AES256-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDH-ECDSA-AES128-SHA256',
    'ECDH-ECDSA-AES128-SHA256:ECDH-ECDSA-AES256-SHA384:AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:DHE-DSS-AES256-SHA256:ADH-AES256-GCM-SHA384:ECDH-RSA-AES128-GCM-SHA256:ADH-AES128-SHA256:ADH-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:NULL-SHA256',
    'DHE-RSA-AES256-SHA256:ECDHE-ECDSA-AES128-SHA256:AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:NULL-SHA256:DHE-DSS-AES256-GCM-SHA384:ECDH-ECDSA-AES128-GCM-SHA256:ADH-AES256-SHA256:ECDHE-RSA-AES256-SHA384:ECDH-RSA-AES256-SHA384:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDH-RSA-AES128-GCM-SHA256:ECDH-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256',
    'DHE-DSS-AES256-GCM-SHA384:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-GCM-SHA384:ADH-AES256-SHA256:ECDH-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDH-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDH-ECDSA-AES128-SHA256:ECDH-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDH-ECDSA-AES128-GCM-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-GCM-SHA256:AES128-SHA256',
    'DHE-RSA-AES256-GCM-SHA384:AES128-SHA256:DHE-RSA-AES256-SHA256:ECDH-RSA-AES128-GCM-SHA256:ECDH-RSA-AES256-GCM-SHA384:AES256-SHA256:DHE-DSS-AES128-SHA256:NULL-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDH-ECDSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:ECDH-RSA-AES256-SHA384:DHE-RSA-AES128-GCM-SHA256:AES128-GCM-SHA256',
    'ADH-AES256-SHA256:ECDH-ECDSA-AES128-GCM-SHA256:ECDH-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:DHE-DSS-AES256-SHA256:DHE-DSS-AES128-GCM-SHA256:DHE-DSS-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDH-RSA-AES256-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDH-RSA-AES128-SHA256:ECDH-ECDSA-AES128-SHA256:NULL-SHA256:AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256',
    'ECDH-ECDSA-AES256-GCM-SHA384:DHE-DSS-AES256-GCM-SHA384:ECDH-ECDSA-AES128-SHA256:DHE-RSA-AES256-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:AES256-SHA256:DHE-DSS-AES256-SHA256:ADH-AES256-SHA256:AES128-GCM-SHA256:ECDH-RSA-AES256-GCM-SHA384:ECDH-ECDSA-AES256-SHA384:ADH-AES128-SHA256:ADH-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384',
    'AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDH-ECDSA-AES128-GCM-SHA256:ECDH-RSA-AES128-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-GCM-SHA384:DHE-DSS-AES128-GCM-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES256-SHA256:ECDH-ECDSA-AES256-SHA384:ECDH-ECDSA-AES256-GCM-SHA384:ECDH-RSA-AES256-GCM-SHA384'
]


def get_ciphers():
    ciphers = random.choice(ciphers_ls).split(':')
    random.shuffle(ciphers)
    return ':'.join(ciphers) + ':!aNULL:!eNULL:!NULL'


class DESAdapter(HTTPAdapter):

    def __init__(self, *args, **kwargs):
        self.ciphers = get_ciphers()
        super().__init__(*args, **kwargs)

    def init_poolmanager(self, *args, **kwargs):
        context = create_urllib3_context(ciphers=self.ciphers)
        kwargs['ssl_context'] = context
        return super(DESAdapter, self).init_poolmanager(*args, **kwargs)

    def proxy_manager_for(self, *args, **kwargs):
        context = create_urllib3_context(ciphers=self.ciphers)
        kwargs['ssl_context'] = context
        return super(DESAdapter, self).proxy_manager_for(*args, **kwargs)
